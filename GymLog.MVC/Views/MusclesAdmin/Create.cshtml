@model GymLog.MVC.Models.MuscleViewModel

@{
    ViewBag.Title = "Dodawanie mięśnia";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@section Breadcrumb{
    <div class="app-title">
        <div>
            <h1><i class="fa fa-puzzle-piece"></i> @ViewBag.Title</h1>
        </div>
        <ul class="app-breadcrumb breadcrumb">
            <li class="breadcrumb-item"> <a href="@Url.Action("Index", "PanelAdmin")"><i class="fa fa-home fa-lg"></i></a></li>
            <li class="breadcrumb-item"> <a href="@Url.Action("Index", "MusclesAdmin")">Mięśnie</a></li>
            <li class="breadcrumb-item">@ViewBag.Title</li>
        </ul>
    </div>
}

<div class="col-md-4">
    <div class="tile">
        @using (Html.BeginForm("Create", "MusclesAdmin", FormMethod.Post))
        {
            @Html.AntiForgeryToken()
            if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
            {
                <div class="alert alert-dismissible alert-danger">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    @Html.ValidationSummary(true, "")
                </div>
            }
            <div class="form-group">
                @Html.LabelFor(model => model.Name, new { @class = "col-form-label col-form-label-lg" })
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
            <div class="tile-footer">
                <button class="btn btn-primary" type="submit"><i class="fa fa-fw fa-lg fa-check-circle"></i>Zapisz</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/Validate")
}
